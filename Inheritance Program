import java.time.Year;
import java.util.Scanner;

class Vehicle {
    protected String brand;
    protected String model;
    protected int year;
    protected double basePrice;

    public Vehicle(String brand, String model, int year, double basePrice) {
        this.brand      = brand;
        this.model      = model;
        this.year       = year;
        this.basePrice  = basePrice;
    }

    public void displayInfo() {
        System.out.printf("Brand: %s%n", brand);
        System.out.printf("Model: %s%n", model);
        System.out.printf("Year: %d%n", year);
        System.out.printf("Base Price: %,.2f%n", basePrice);
    }

    public double calculateResaleValue() {
        int currentYear = Year.now().getValue();
        int age = currentYear - year;
        return basePrice * Math.pow(0.85, age);
    }
}

class Car extends Vehicle {
    private int numberOfDoors;

    public Car(String brand, String model, int year,
               double basePrice, int numberOfDoors) {
        super(brand, model, year, basePrice);
        this.numberOfDoors = numberOfDoors;
    }

    public double calculateInsurance() {
        return 5_000 + (1_000 * numberOfDoors);
    }

    public double calculateMaintenanceCost() {
        return 3_000 + (500 * numberOfDoors);
    }

    @Override
    public void displayInfo() {
        super.displayInfo();
        System.out.printf("Number of Doors: %d%n", numberOfDoors);
        System.out.printf("Insurance Cost: %,.2f%n", calculateInsurance());
        System.out.printf("Maintenance Cost: %,.2f%n", calculateMaintenanceCost());
        System.out.printf("Resale Value: %,.2f%n", calculateResaleValue());
        System.out.println("-----------------------------------");
    }
}

class Motorcycle extends Vehicle {
    private boolean hasSidecar;

    public Motorcycle(String brand, String model, int year,
                      double basePrice, boolean hasSidecar) {
        super(brand, model, year, basePrice);
        this.hasSidecar = hasSidecar;
    }
	
    public double calculateInsurance() {
        return hasSidecar ? 2_500 + 1_500 : 2_500;
    }

    public double calculateMaintenanceCost() {
        return hasSidecar ? 2_000 + 1_000 : 2_000;
    }

    public void displayInfo() {
        super.displayInfo();
        System.out.printf("Has Sidecar: %s%n",
                          (hasSidecar ? "Yes" : "No"));
        System.out.printf("Insurance Cost: %,.2f%n", calculateInsurance());
        System.out.printf("Maintenance Cost: %,.2f%n", calculateMaintenanceCost());
        System.out.printf("Resale Value: %,.2f%n", calculateResaleValue());
        System.out.println("-----------------------------------");
    }
}

public class VehicleTest {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.println("Enter Car details:");
        System.out.print("  Brand: ");
        String carBrand = sc.nextLine();
        System.out.print("  Model: ");
        String carModel = sc.nextLine();
        System.out.print("  Year: ");
        int carYear = sc.nextInt();
        System.out.print("  Base Price: ");
        double carPrice = sc.nextDouble();
        System.out.print("  Number of Doors: ");
        int doors = sc.nextInt();
        sc.nextLine();

        Car car = new Car(carBrand, carModel, carYear, carPrice, doors);

        System.out.println("\nEnter Motorcycle details:");
        System.out.print("  Brand: ");
        String mcBrand = sc.nextLine();
        System.out.print("  Model: ");
        String mcModel = sc.nextLine();
        System.out.print("  Year: ");
        int mcYear = sc.nextInt();
        System.out.print("  Base Price: ");
        double mcPrice = sc.nextDouble();
        System.out.print("  Has Sidecar? (true/false): ");
        boolean mcSidecar = sc.nextBoolean();
        sc.close();

        Motorcycle motorcycle = new Motorcycle(mcBrand, mcModel, mcYear, mcPrice, mcSidecar);

        System.out.println("\nCar Details:");
        car.displayInfo();
        System.out.println("Motorcycle Details:");
        motorcycle.displayInfo();
    }
}




